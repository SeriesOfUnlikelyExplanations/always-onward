{
  "Resources": {
    "alwaysOnwardLambdaServiceRole3AF05F22": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "lambda/alwaysOnwardLambda/ServiceRole/Resource"
      }
    },
    "alwaysOnwardLambda964B3CA1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccS3BucketD2F9EAB7"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccS3VersionKey2E59B438"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccS3VersionKey2E59B438"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "alwaysOnwardLambdaServiceRole3AF05F22",
            "Arn"
          ]
        },
        "FunctionName": "alwaysOnwardLambda",
        "Handler": "index.handler",
        "MemorySize": 512,
        "Runtime": "nodejs14.x",
        "Timeout": 120
      },
      "DependsOn": [
        "alwaysOnwardLambdaServiceRole3AF05F22"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda/alwaysOnwardLambda/Resource",
        "aws:asset:path": "/mnt/c/users/woodardt/workspace/always-onward/lambda",
        "aws:asset:property": "Code"
      }
    },
    "alwaysOnwardLambdaEventInvokeConfigD5434D52": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "alwaysOnwardLambda964B3CA1"
        },
        "Qualifier": "$LATEST",
        "MaximumRetryAttempts": 0
      },
      "Metadata": {
        "aws:cdk:path": "lambda/alwaysOnwardLambda/EventInvokeConfig/Resource"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "BinaryMediaTypes": [
          "*/*"
        ],
        "Description": "Simple lambda API service. Timestamp: 1623287699077",
        "Name": "api"
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda/api/Account"
      }
    },
    "apiDeployment149F1294ba5b31c4aa50bc484086561f75becc36": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apiproxyANY7F13F09C",
        "apiproxy4EA44110",
        "apiANYB3DF8C3C"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda/api/Deployment/Resource"
      }
    },
    "apiDeploymentStageprod896C8101": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F1294ba5b31c4aa50bc484086561f75becc36"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/DeploymentStage.prod/Resource"
      }
    },
    "apiproxy4EA44110": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/{proxy+}/Resource"
      }
    },
    "apiproxyANYApiPermissionlambdaapiC0087213ANYproxyC7D8F07D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "alwaysOnwardLambda964B3CA1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:718523126320:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/{proxy+}/ANY/ApiPermission.lambdaapiC0087213.ANY..{proxy+}"
      }
    },
    "apiproxyANYApiPermissionTestlambdaapiC0087213ANYproxy77068950": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "alwaysOnwardLambda964B3CA1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:718523126320:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/{proxy+}/ANY/ApiPermission.Test.lambdaapiC0087213.ANY..{proxy+}"
      }
    },
    "apiproxyANY7F13F09C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "apiproxy4EA44110"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "alwaysOnwardLambda964B3CA1",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/{proxy+}/ANY/Resource"
      }
    },
    "apiANYApiPermissionlambdaapiC0087213ANY16368EB4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "alwaysOnwardLambda964B3CA1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:718523126320:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/ANY/ApiPermission.lambdaapiC0087213.ANY.."
      }
    },
    "apiANYApiPermissionTestlambdaapiC0087213ANYE993E961": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "alwaysOnwardLambda964B3CA1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-west-2:718523126320:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/ANY/ApiPermission.Test.lambdaapiC0087213.ANY.."
      }
    },
    "apiANYB3DF8C3C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "alwaysOnwardLambda964B3CA1",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda/api/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAA21Q0U7DMAz8Ft69bBUIXikDJCQQVfmCkHpd1iap4qSjivLvJC1lPPDk88Xxna9gxe6O7a7u+Zk2oum2QRiLLHw4LjooidAl2ErdQo1kvBUIe6PJWS8c7A+64pYrdGhz8+7d4Gd6HY6QF4eeq8+Gs/DstXDS6Dzyi59G1O5Fj6bDtPog2/z6L1mhVZIofYoguWKhNj3OcqlGoOsNz46JzcaBD7LlDs98YuF1dpBsuXKQPw5XWAphvHbwiENvJpWEM/unyxHMOgtYj3vghFBZ8zVdsrmcDm/ojqbJ1IJijKBNg+xE27G4YcVtCv5EUm5sUpcKWb3Ub6oALJyVAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "lambda/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccS3BucketD2F9EAB7": {
      "Type": "String",
      "Description": "S3 bucket for asset \"11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033cc\""
    },
    "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccS3VersionKey2E59B438": {
      "Type": "String",
      "Description": "S3 key for asset version \"11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033cc\""
    },
    "AssetParameters11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033ccArtifactHashEC44C5B6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"11d1e3109593269940cd5aed87e6619069b4adb9a7ca0509865708e7c9e033cc\""
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-west-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStageprod896C8101"
            },
            "/"
          ]
        ]
      }
    },
    "ExportsOutputRefapiC855031500EF81AC": {
      "Value": {
        "Ref": "apiC8550315"
      },
      "Export": {
        "Name": "Always-Onward-lambda-stack:ExportsOutputRefapiC855031500EF81AC"
      }
    },
    "ExportsOutputRefapiDeploymentStageprod896C8101B2549B76": {
      "Value": {
        "Ref": "apiDeploymentStageprod896C8101"
      },
      "Export": {
        "Name": "Always-Onward-lambda-stack:ExportsOutputRefapiDeploymentStageprod896C8101B2549B76"
      }
    }
  }
}